# -*- Python -*-
[pylithapp]

# This file contains the problem parameters common to all the examples,
# and is read automatically.  To run a specific example, it is also
# necessary to specify the file describing the mesh, the file describing
# the time-dependent fault behavior, the file describing the solution
# parameters, and the problem-specific file.

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
# Turn on some journals to show progress.
[pylithapp.journal.info]
timedependent = 1
implicit = 1
petsc = 1
solverlinear = 1
meshimporter = 1
meshiocubit = 1
meshiolagrit = 1
gmvfile = 1
psetfile = 1
implicitelasticity = 1
faultcohesivekin = 1
#quadrature3d = 1
#fiatlagrange = 1

[pylithapp.journal.debug]
# pylithapp = 1
# problem = 1
# implicit = 1

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
# Change the mesh reader to the CUBIT reader.
reader = pylith.meshio.MeshIOCubit
reorder_mesh = true

[pylithapp.mesh_generator.reader]
coordsys.space_dim = 3

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
bc = [x_pos,x_neg,z_neg,y_pos,y_neg]

interfaces = [fault]

[pylithapp.timedependent.implicit]
# We will output the solution over the domain and the ground surface.
output = [domain,subdomain]

# Set subdomain component to OutputSolnSubset (subset of domain).
output.subdomain = pylith.meshio.OutputSolnSubset

# ----------------------------------------------------------------------
# time stepping
# ----------------------------------------------------------------------
[pylithapp.timedependent.formulation.time_step]
# Define the total time for the simulation and the default time step size.
total_time = 2000.0*year ; total time of simulation
dt = 5.0*year ; time step

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# Set materials to an array of 2 materials:
#   'elastic' and 'maxwell'
materials = [elastic,maxwell]
materials.maxwell = pylith.materials.MaxwellIsotropic3D

[pylithapp.timedependent.materials.elastic]
label = Upper elastic layer
id = 1
db_properties.iohandler.filename = mat_elastic.spatialdb
db_properties.label = Elastic material properties

[pylithapp.timedependent.materials.maxwell]
label = Lower Maxwell material
id = 2
db_properties.iohandler.filename = mat_maxwell_tau0-4.spatialdb
db_properties.label = Viscoelastic material properties yielding tau0=4
output.cell_data_fields = [total_strain,viscous_strain,stress]
output.cell_info_fields = [mu,lambda,density,maxwell_time]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.timedependent.bc.x_pos]
bc_dof = [0, 1]
label = face_xpos
db_initial.label = Dirichlet BC on +x
# We change spatial database for the rate of change from FixedDOFDB
# (which has zero velocity) to UniformDB (which allows nonzero
# velocities).
db_rate = spatialdata.spatialdb.UniformDB
db_rate.label = Dirichlet rate BC on +x
db_rate.values = [displacement-rate-x,displacement-rate-y,rate-start-time]
# Apply a rate of +1 cm/year.
db_rate.data = [0.0*cm/year,1.0*cm/year,0.0*year]

[pylithapp.timedependent.bc.x_neg]
bc_dof = [0, 1]
label = face_xneg
db_initial.label = Dirichlet BC on -x
# We change spatial database for the rate of change from FixedDOFDB
# (which has zero velocity) to UniformDB (which allows nonzero
# velocities).
db_rate = spatialdata.spatialdb.UniformDB
db_rate.label = Dirichlet rate BC on -x
db_rate.values = [displacement-rate-x,displacement-rate-y,rate-start-time]
# Apply a rate of -1 cm/year.
db_rate.data = [0.0*cm/year,-1.0*cm/year,0.0*year]

# Fix z-displacements on bottom boundary.
[pylithapp.timedependent.bc.z_neg]
bc_dof = [2]
label = face_zneg
db_initial.label = Dirichlet BC on -z

# Fix x-displacements on y-boundaries to prevent movement perpendicular to
# the fault.
[pylithapp.timedependent.bc.y_pos]
bc_dof = [0]
label = face_ypos_nofault
db_initial.label = Dirichlet BC on +y

[pylithapp.timedependent.bc.y_neg]
bc_dof = [0]
label = face_yneg_nofault
db_initial.label = Dirichlet BC on -y

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
# Set the parameters for the fault interface conditions.
[pylithapp.timedependent.interfaces.fault]
label = fault

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# Give basename for VTK domain output of solution over domain.
[pylithapp.problem.formulation.output.domain]
output_freq = time_step
time_step = 50*year
writer = pylith.meshio.DataWriterHDF5Mesh

# Give basename for VTK domain output of solution over ground surface.
[pylithapp.problem.formulation.output.subdomain]
label = face_zpos ; nodeset for subdomain
vertex_data_fields = [displacement,velocity]
output_freq = time_step
time_step = 10*year
writer = pylith.meshio.DataWriterHDF5SubMesh

# Give basename for vtk fault rupture output.
[pylithapp.timedependent.interfaces.fault.output]
output_freq = time_step
time_step = 10*year
writer = pylith.meshio.DataWriterHDF5SubSubMesh

# Give basename for VTK output of state variables.
[pylithapp.timedependent.materials.elastic.output]
output_freq = time_step
time_step = 50*year
cell_filter = pylith.meshio.CellFilterAvgMesh
writer = pylith.meshio.DataWriterHDF5Mesh

[pylithapp.timedependent.materials.maxwell.output]
output_freq = time_step
time_step = 50*year
cell_filter = pylith.meshio.CellFilterAvgMesh
writer = pylith.meshio.DataWriterHDF5Mesh

# ----------------------------------------------------------------------
# PETSc
# ----------------------------------------------------------------------
# Set the solver options.

[pylithapp.petsc]

ksp_rtol = 1.0e-8
ksp_atol = 1.0e-20
ksp_max_it = 500

ksp_monitor = true
ksp_view = true
ksp_monitor_singular_value = true
ksp_converged_reason = true
ksp_monitor_true_residual = true

log_summary = true
# start_in_debugger = true

# End of file
